Please follow the instructions below to test the classifiers.

1. Make sure that the folder 'dataset' is located in the same directory as the folder 'WikipediaVandalismDetection'. We'll call this directory as the root directory.
2. Go to the folder 'helpers' located in the src directory.
3. Run the command: chmod 777 prepare_features.sh
4. Run the command: ./prepare_features.sh. This command prepares the file features.csv in the root directory.
5. Run the command: python prepare_corpus.py. This command prepares the corpus by appending the true label column to the end of features.
6. Go to the folder 'cross_validation' and run the following commands to create the training-testing dataset for the whole corpus. This would create two files in the root directory namely training_set.csv and testing_set.csv.
7. python create_training_validation_test_datasets.py
8. Run the following command to create k-fold training and test datasets on which the hyperparameters would be estimated. This would create 10 files in the root directory as we are selecting k = 5.
9. python k_fold_cross_validation.py
10. Go to the directory 'classifier' and run the following commands to generate files for testing on validation set.
11. python multinomial_naive_bayes.py train
12. python random_forest.py train all (all is used for training on all features)
13. python svm_rbf.py train
15. Open the file logistic_regression.py and set the global variables TRAINING_SET, VALIDATION_SET, TESTING_SET to the datasets on which training has to be done.
16. python logistic_regression.py TRAIN
17. Open the file one_class_svm.py and set the global variables TRAINING_SET, VALIDATION_SET, TESTING_SET to the datasets on which training has to be done.
18. python one_class_svm.py TRAIN
19. Find the best estimate of the parameters of every classifier manually from the generated txt files in the root directory according to the F1 score.
20. Now, test the classifiers on the test datasets using the estimated parameters by running the following commands.
21. python svm_rbf test Gamma1 Gamma2 Gamma3 Gamma4 Gamma 5 Gamma6 C1 C2 C3 C4 C5 C6
22. python multinomial_naive_bayes test Alpha1 Alpha2 Alpha3 Alpha4 Alpha5 Alpha6
23. python random_forest.py test NumTree1 NumTree2 NumTree3 NumTree4 NumTree5 NumTree6 Max_Depth1 Max_Depth2 Max_Depth3 Max_Depth4 Max_Depth5 Max_Depth6
24. Open the file logistic_regression.py and set the global variables C to the estimated parameter.
25. python logistic_regression.py TEST
26. python one_class_svm.py TEST